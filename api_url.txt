https://api.sampleapis.com/beers/ale



 const [beers, setBeers] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [filteredBeers, setFilteredBeers] = useState([]);
  

  useEffect(() => {
    const fetchBeers = async () => {
      try {
        const response = await fetch('https://api.sampleapis.com/beers/ale');
        const data = await response.json();
        setBeers(data);
        setFilteredBeers(data);
      } catch (error) {
        console.error('Error fetching beer data:', error);
      }
    };

    fetchBeers();
  }, []);

  // Handle search query change
  const handleSearch = (event) => {
    setSearchQuery(event.target.value);
    filterBeers(event.target.value);
  };

  // Filter beers based on search query
  const filterBeers = (query) => {
    if (!query) {
      setFilteredBeers(beers); // No query, show all beers
    } else {
      const filtered = beers.filter((beer) =>
        beer.name.toLowerCase().includes(query.toLowerCase())
      );
      setFilteredBeers(filtered);
    }
  };


   <div className="app">
      <h1>Beer List</h1>

      {/* Search input */}
      <input
        type="text"
        placeholder="Search for a beer"
        value={searchQuery}
        onChange={handleSearch}
        className="search-input"
      />

      <div className="beer-list">
        {filteredBeers.length > 0 ? (
          filteredBeers.map((beer) => (
            <BeerCard key={beer.id} beer={beer} />
          ))
        ) : (
          <p>No beers found</p>
        )}
      </div>
    </div>